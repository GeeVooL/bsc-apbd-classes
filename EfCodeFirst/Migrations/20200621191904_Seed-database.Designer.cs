// <auto-generated />
using System;
using EfCodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCodeFirst.Migrations
{
    [DbContext(typeof(MedicamentsDbContext))]
    [Migration("20200621191904_Seed-database")]
    partial class Seeddatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCodeFirst.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "as@gmail.com",
                            FirstName = "Albert",
                            LastName = "Sum"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "ab@gmail.com",
                            FirstName = "Adam",
                            LastName = "Brown"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "as@gmail.com",
                            FirstName = "Catherine",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("EfCodeFirst.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Short-acting benzodiazepine",
                            Name = "Xanax",
                            Type = "Pills"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Drug containing salts of amphetamine",
                            Name = "Adderall",
                            Type = "Pills"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Effective pain killer",
                            Name = "Vicodin",
                            Type = "Pills"
                        });
                });

            modelBuilder.Entity("EfCodeFirst.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPatient");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(2020, 6, 21, 21, 19, 4, 282, DateTimeKind.Local).AddTicks(3855),
                            FirstName = "Martin",
                            LastName = "Gooseman"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(2020, 6, 21, 21, 19, 4, 287, DateTimeKind.Local).AddTicks(6174),
                            FirstName = "Luke",
                            LastName = "Krause"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(2020, 6, 21, 21, 19, 4, 287, DateTimeKind.Local).AddTicks(6227),
                            FirstName = "Kyron",
                            LastName = "Harwood"
                        });
                });

            modelBuilder.Entity("EfCodeFirst.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2020, 6, 21, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(1175),
                            DueDate = new DateTime(2020, 6, 22, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(1698),
                            IdDoctor = 1,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2020, 6, 21, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(2280),
                            DueDate = new DateTime(2020, 6, 22, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(2303),
                            IdDoctor = 2,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2020, 6, 21, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(2312),
                            DueDate = new DateTime(2020, 6, 22, 21, 19, 4, 301, DateTimeKind.Local).AddTicks(2315),
                            IdDoctor = 3,
                            IdPatient = 3
                        });
                });

            modelBuilder.Entity("EfCodeFirst.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("IdPrescription");

                    b.ToTable("PrescriptionMedicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 1,
                            Details = "Lorem ipsum dolor",
                            Dose = 15
                        },
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 1,
                            Details = "Lorem ipsum dolor",
                            Dose = 10
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 2,
                            Details = "Lorem ipsum dolor",
                            Dose = 8
                        },
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 2,
                            Details = "Lorem ipsum dolor",
                            Dose = 6
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 3,
                            Details = "Lorem ipsum dolor",
                            Dose = 3
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 3,
                            Details = "Lorem ipsum dolor",
                            Dose = 1
                        });
                });

            modelBuilder.Entity("EfCodeFirst.Models.Prescription", b =>
                {
                    b.HasOne("EfCodeFirst.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .IsRequired();

                    b.HasOne("EfCodeFirst.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .IsRequired();
                });

            modelBuilder.Entity("EfCodeFirst.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("EfCodeFirst.Models.Medicament", "Medicament")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdMedicament")
                        .IsRequired();

                    b.HasOne("EfCodeFirst.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdPrescription")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
